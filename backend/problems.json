[
  {
    "problemNumber": 1,
    "title": "Two Sum",
    "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.",
    "difficulty": "Easy",
    "examples": [
      { "input": "nums = [2,7,11,15], target = 9", "output": "[0,1]" }
    ],
    "constraints": [
      "2 <= nums.length <= 10^4",
      "-10^9 <= nums[i] <= 10^9",
      "-10^9 <= target <= 10^9"
    ]
  },
  {
    "problemNumber": 2,
    "title": "Palindrome Number",
    "description": "Given an integer x, return true if x is a palindrome, and false otherwise.",
    "difficulty": "Easy",
    "examples": [
      { "input": "x = 121", "output": "true" },
      { "input": "x = -121", "output": "false" }
    ],
    "constraints": [
      "-2^31 <= x <= 2^31 - 1"
    ]
  },
  {
    "problemNumber": 3,
    "title": "Valid Parentheses",
    "description": "Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.",
    "difficulty": "Easy",
    "examples": [
      { "input": "s = \"()[]{}\"", "output": "true" }
    ],
    "constraints": [
      "1 <= s.length <= 10^4",
      "s consists of parentheses only"
    ]
  },
  {
    "problemNumber": 4,
    "title": "Merge Two Sorted Lists",
    "description": "Merge two sorted linked lists and return it as a new sorted list.",
    "difficulty": "Easy",
    "examples": [
      { "input": "l1 = [1,2,4], l2 = [1,3,4]", "output": "[1,1,2,3,4,4]" }
    ],
    "constraints": [
      "The number of nodes in both lists is in the range [0, 50]",
      "-100 <= Node.val <= 100"
    ]
  },
  {
    "problemNumber": 5,
    "title": "Best Time to Buy and Sell Stock",
    "description": "You are given an array prices where prices[i] is the price of a stock on the ith day. Maximize your profit.",
    "difficulty": "Easy",
    "examples": [
      { "input": "prices = [7,1,5,3,6,4]", "output": "5" }
    ],
    "constraints": [
      "1 <= prices.length <= 10^5",
      "0 <= prices[i] <= 10^4"
    ]
  },
  {
    "problemNumber": 6,
    "title": "Valid Anagram",
    "description": "Given two strings s and t, return true if t is an anagram of s.",
    "difficulty": "Easy",
    "examples": [
      { "input": "s = \"anagram\", t = \"nagaram\"", "output": "true" }
    ],
    "constraints": [
      "1 <= s.length, t.length <= 5 * 10^4",
      "s and t consist of lowercase English letters"
    ]
  },
  {
    "problemNumber": 7,
    "title": "Binary Search",
    "description": "Implement binary search on a sorted array.",
    "difficulty": "Easy",
    "examples": [
      { "input": "nums = [-1,0,3,5,9,12], target = 9", "output": "4" }
    ],
    "constraints": [
      "1 <= nums.length <= 10^4",
      "-10^4 < nums[i], target < 10^4"
    ]
  },
  {
    "problemNumber": 8,
    "title": "Flood Fill",
    "description": "Perform a 'flood fill' on a 2D image starting from a pixel.",
    "difficulty": "Easy",
    "examples": [
      { "input": "image = [[1,1,1],[1,1,0],[1,0,1]], sr = 1, sc = 1, color = 2", "output": "[[2,2,2],[2,2,0],[2,0,1]]" }
    ],
    "constraints": [
      "1 <= image.length, image[0].length <= 50",
      "0 <= image[i][j], color < 2^16"
    ]
  },
  {
    "problemNumber": 9,
    "title": "Maximum Subarray",
    "description": "Find the contiguous subarray with the largest sum.",
    "difficulty": "Easy",
    "examples": [
      { "input": "nums = [-2,1,-3,4,-1,2,1,-5,4]", "output": "6" }
    ],
    "constraints": [
      "1 <= nums.length <= 10^5",
      "-10^4 <= nums[i] <= 10^4"
    ]
  },
  {
    "problemNumber": 10,
    "title": "Climbing Stairs",
    "description": "You can climb 1 or 2 steps at a time. How many distinct ways can you climb to the top?",
    "difficulty": "Easy",
    "examples": [
      { "input": "n = 2", "output": "2" },
      { "input": "n = 3", "output": "3" }
    ],
    "constraints": [
      "1 <= n <= 45"
    ]
  },
  {
    "problemNumber": 11,
    "title": "Linked List Cycle",
    "description": "Check if a linked list has a cycle in it.",
    "difficulty": "Easy",
    "examples": [
      { "input": "head = [3,2,0,-4], pos = 1", "output": "true" }
    ],
    "constraints": [
      "-10^5 <= Node.val <= 10^5",
      "0 <= pos < size of list"
    ]
  },
  {
    "problemNumber": 12,
    "title": "Missing Number",
    "description": "Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing.",
    "difficulty": "Easy",
    "examples": [
      { "input": "nums = [3,0,1]", "output": "2" }
    ],
    "constraints": [
      "n == nums.length",
      "0 <= nums[i] <= n"
    ]
  },
  {
    "problemNumber": 13,
    "title": "Power of Two",
    "description": "Given an integer n, return true if it is a power of two. Otherwise, return false.",
    "difficulty": "Easy",
    "examples": [
      { "input": "n = 16", "output": "true" },
      { "input": "n = 3", "output": "false" }
    ],
    "constraints": [
      "-2^31 <= n <= 2^31 - 1"
    ]
  },
  {
    "problemNumber": 14,
    "title": "Reverse Linked List",
    "description": "Reverse a singly linked list.",
    "difficulty": "Easy",
    "examples": [
      { "input": "head = [1,2,3,4,5]", "output": "[5,4,3,2,1]" }
    ],
    "constraints": [
      "The number of nodes is in the range [0, 5000]",
      "-5000 <= Node.val <= 5000"
    ]
  },
  {
    "problemNumber": 15,
    "title": "Valid Palindrome",
    "description": "Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.",
    "difficulty": "Easy",
    "examples": [
      { "input": "s = \"A man, a plan, a canal: Panama\"", "output": "true" }
    ],
    "constraints": [
      "1 <= s.length <= 2 * 10^5"
    ]
  },
  {
    "problemNumber": 16,
    "title": "Majority Element",
    "description": "Find the element that appears more than ⌊n / 2⌋ times.",
    "difficulty": "Easy",
    "examples": [
      { "input": "nums = [3,2,3]", "output": "3" }
    ],
    "constraints": [
      "n == nums.length",
      "1 <= n <= 5 * 10^4"
    ]
  },
  {
    "problemNumber": 17,
    "title": "First Unique Character in a String",
    "description": "Return the index of the first non-repeating character in a string.",
    "difficulty": "Easy",
    "examples": [
      { "input": "s = \"leetcode\"", "output": "0" }
    ],
    "constraints": [
      "1 <= s.length <= 10^5",
      "s consists of only lowercase English letters."
    ]
  },
  {
    "problemNumber": 18,
    "title": "Implement strStr()",
    "description": "Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.",
    "difficulty": "Easy",
    "examples": [
      { "input": "haystack = \"hello\", needle = \"ll\"", "output": "2" }
    ],
    "constraints": [
      "0 <= haystack.length, needle.length <= 5 * 10^4"
    ]
  },
  {
    "problemNumber": 19,
    "title": "Intersection of Two Arrays II",
    "description": "Given two arrays, return their intersection including duplicates.",
    "difficulty": "Easy",
    "examples": [
      { "input": "nums1 = [1,2,2,1], nums2 = [2,2]", "output": "[2,2]" }
    ],
    "constraints": [
      "1 <= nums1.length, nums2.length <= 1000",
      "0 <= nums1[i], nums2[i] <= 1000"
    ]
  },
  {
    "problemNumber": 20,
    "title": "Fizz Buzz",
    "description": "Write a program that outputs the string representation of numbers from 1 to n with multiples of 3 as 'Fizz', multiples of 5 as 'Buzz' and multiples of both as 'FizzBuzz'.",
    "difficulty": "Easy",
    "examples": [
      { "input": "n = 15", "output": "[\"1\",\"2\",\"Fizz\",\"4\",\"Buzz\",\"Fizz\",\"7\",\"8\",\"Fizz\",\"Buzz\",\"11\",\"Fizz\",\"13\",\"14\",\"FizzBuzz\"]" }
    ],
    "constraints": [
      "1 <= n <= 10^4"
    ]
  }
]
